apiVersion: v1
kind: Service
metadata:
  name: mongodbshardservice
  labels:
    name: mongoshard
spec:
  ports:
    - port: 27017
      targetPort: 27017
  clusterIP: None
  selector:
    role: mongoshard
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodbshardstateful
spec:
  selector:
    matchLabels:
      role: mongoshard
  serviceName: mongodbshardservice
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        role: mongoshard
        replicaset: mongoshards
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 50 #set to 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: replicaset
                      operator: In
                      values:
                        - mongoshards
                topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 10
      containers:
        - name: mongodshardcontainer
          image: mongo:3.6.2
          command:
            - "numactl"
            - "--interleave=all"
            - "mongod"
            - "--shardsvr"
            - "--replSet"
            - "mongoreplicaset1shard"
            - "--bind_ip_all"
            - "--port"
            - "27017"
            # - "--wiredTigerCacheSizeGB"
            # - "0.5"
            # - "--auth"
            # - "--clusterAuthMode"
            # - "keyFile" or can be "x509"
            # - "--keyFile"
            # - "keyfile path"
            # - "--setParameter"
            # - "authenticationMechanisms=SCRAM-SHA-1"
          ports:
            - containerPort: 27017
          lifecycle:
            #postStart:
            #exec:
            #command: ["/bin/sh", "-c", "rm -rfd /data/db/*"]
            preStop:
              exec:
                command: ["/bin/sh", "-c", "rm -rfd /data/db/*"]
          volumeMounts:
            - name: mongodbshardpvc
              mountPath: /data/db
          readinessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.getMongo()"
            initialDelaySeconds: 30
            periodSeconds: 20
            timeoutSeconds: 120
            failureThreshold: 6
          livenessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.getMongo()"
            initialDelaySeconds: 30
            periodSeconds: 20
            timeoutSeconds: 120
            failureThreshold: 6
  volumeClaimTemplates:
    - metadata:
        name: mongodbshardpvc
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: sharedfs
        resources:
          requests:
            storage: 5Gi
